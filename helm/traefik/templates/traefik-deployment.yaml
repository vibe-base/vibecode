apiVersion: apps/v1
kind: Deployment
metadata:
  name: traefik
  namespace: default
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: traefik
  template:
    metadata:
      labels:
        app: traefik
    spec:
      serviceAccountName: {{ .Values.serviceAccount.name }}   # <-- ADD THIS LINE CLEARLY HERE
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      tolerations:
        - key: "node-role.kubernetes.io/control-plane"
          operator: "Exists"
          effect: "NoSchedule"
      containers:
        - name: traefik
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - --configfile=/config/traefik.yaml
            - --api.insecure=true
            - --providers.kubernetesingress
            - --log.level=DEBUG
            - --entrypoints.web.address=:80
            - --entrypoints.websecure.address=:443
            - --certificatesresolvers.letsencrypt.acme.email={{ .Values.certResolver.email }}
            - --certificatesresolvers.letsencrypt.acme.storage={{ .Values.certResolver.storage }}
            - --certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web
          ports:
            - name: web
              containerPort: 80
            - name: websecure
              containerPort: 443
            - name: admin
              containerPort: 8080
          volumeMounts:
            - name: config
              mountPath: /config
      volumes:
        - name: config
          configMap:
            name: traefik-config
