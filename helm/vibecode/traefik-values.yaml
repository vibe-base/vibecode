# traefik-values.yaml

# Deployment Configuration
deployment:
  enabled: true
  replicas: 1
  annotations: {}

# Pod Configuration
hostNetwork: true
dnsPolicy: ClusterFirstWithHostNet

# Security Context
securityContext:
  fsGroup: 65532
  runAsUser: 65532
  runAsGroup: 65532

# Init Container for Permission Fix
initContainers:
  - name: fix-permissions
    image: busybox:1.35
    command: ["sh", "-c", "mkdir -p /data && chown -R 65532:65532 /data"]
    securityContext:
      runAsUser: 0
    volumeMounts:
      - name: data
        mountPath: /data

# Persistence Configuration
persistence:
  enabled: true
  existingClaim: traefik
  accessMode: ReadWriteOnce
  size: 1Gi

# Ports Configuration (correct format)
ports:
  web:
    port: 80
    expose: true
    exposedPort: 80
    protocol: TCP
  websecure:
    port: 443
    expose: true
    exposedPort: 443
    protocol: TCP
  traefik:
    port: 8080
    expose: false
  metrics:
    port: 9100
    expose: false

# Additional Arguments
additionalArguments:
  - "--entrypoints.web.address=:80"
  - "--entrypoints.websecure.address=:443"
  - "--certificatesresolvers.letsencrypt.acme.email=your_real_email@example.com"
  - "--certificatesresolvers.letsencrypt.acme.storage=/data/acme.json"
  - "--certificatesresolvers.letsencrypt.acme.httpchallenge=true"
  - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web"
  - "--providers.kubernetesingress"
  - "--providers.kubernetescrd"
  - "--api.dashboard=true"
  - "--ping=true"
  - "--metrics.prometheus=true"

# Container Configuration
containers:
  - name: traefik
    image: "traefik:v3.3.5"
    securityContext:
      runAsUser: 65532
      runAsGroup: 65532
    volumeMounts:
      - name: data
        mountPath: /data

# Single Volume Definition
volumes:
  - name: data
    persistentVolumeClaim:
      claimName: traefik

# Disable PVC template
volumeClaimTemplates: []

# Resources
resources:
  requests:
    cpu: "100m"
    memory: "50Mi"
  limits:
    cpu: "500m"
    memory: "200Mi"