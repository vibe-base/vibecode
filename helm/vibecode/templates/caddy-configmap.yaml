apiVersion: v1
kind: ConfigMap
metadata:
  name: caddy-config
  labels:
    {{- include "vibecode.labels" . | nindent 4 }}
data:
  Caddyfile: |
    {
      # Global options
      admin off
      # Email for Let's Encrypt notifications
      email {{ .Values.caddy.email | default "admin@example.com" }}
      # Set auto HTTPS to off for Kubernetes deployment
      auto_https off
      # Disable HTTP challenge for k3s
      acme_http off
    }

    # Handle HTTP and HTTPS
    {{ if .Values.caddy.domain }}{{ .Values.caddy.domain }}{{ else }}:80, :443{{ end }} {
      # TLS configuration
      tls {
      {{- if .Values.caddy.tls.enabled }}
        {{- if .Values.caddy.tls.selfSigned }}
        # Use self-signed certificate for development
        self_signed
        {{- else if and .Values.caddy.tls.certFile .Values.caddy.tls.keyFile }}
        # Use provided certificate and key
        cert_file {{ .Values.caddy.tls.certFile }}
        key_file {{ .Values.caddy.tls.keyFile }}
        {{- else }}
        # Use Let's Encrypt
        issuer acme
        {{- end }}
      {{- end }}
      }

      # Route to frontend
      handle_path / {
        reverse_proxy frontend:{{ .Values.frontend.port }}
      }

      # Route to Express API
      handle_path /api/express/* {
        uri strip_prefix /api/express
        reverse_proxy express:{{ .Values.express.port }}
      }

      # Route to FastAPI
      handle_path /api/* {
        uri strip_prefix /api
        reverse_proxy fastapi:{{ .Values.fastapi.port }}
      }

      # Health check
      handle /health {
        respond "OK" 200
      }

      # Log requests
      log {
        output stdout
        format console
      }
    }
