apiVersion: apps/v1
kind: Deployment
metadata:
  name: highest-priority-github
  namespace: vibecode
spec:
  replicas: 1
  selector:
    matchLabels:
      app: highest-priority-github
  template:
    metadata:
      labels:
        app: highest-priority-github
    spec:
      containers:
      - name: node
        image: node:18-alpine
        command: ["/bin/sh", "-c"]
        args:
        - |
          # Create a directory for the server
          mkdir -p /app
          cd /app
          
          # Create package.json
          cat > package.json << 'EOF'
          {
            "name": "highest-priority-github",
            "version": "1.0.0",
            "description": "Highest priority GitHub service",
            "main": "index.js",
            "dependencies": {
              "express": "^4.18.2",
              "cors": "^2.8.5"
            }
          }
          EOF
          
          # Create index.js
          cat > index.js << 'EOF'
          const express = require("express");
          const cors = require("cors");
          const app = express();
          const port = process.env.PORT || 3000;

          // Enable CORS for all routes
          app.use(cors({
            origin: "*",
            methods: ["GET", "POST", "OPTIONS"],
            allowedHeaders: ["Origin", "X-Requested-With", "Content-Type", "Accept", "Authorization"],
            credentials: true
          }));

          console.log("Starting highest priority GitHub service...");

          // Log all requests
          app.use((req, res, next) => {
            console.log(`Received request: ${req.method} ${req.url}`);
            next();
          });

          // Redirect to GitHub for authentication
          app.get("/api/auth/github", (req, res) => {
            console.log("Redirecting to GitHub for authentication");
            
            // For testing, redirect directly to our callback with a mock code
            res.redirect("/github-callback?code=mock_code");
          });

          // Handle GitHub callback
          app.get("/github-callback", (req, res) => {
            const code = req.query.code;
            
            console.log(`GitHub callback received with code: ${code}`);
            
            const html = `
            <!DOCTYPE html>
            <html>
            <head>
              <title>GitHub Authentication</title>
            </head>
            <body>
              <h1>GitHub Authentication</h1>
              <p>Setting auth token and redirecting...</p>
              <script>
                // Set auth token in localStorage
                localStorage.setItem("auth_token", "mock_access_token");
                
                // Redirect to home page
                window.location.href = "/";
              </script>
            </body>
            </html>
            `;
            
            res.send(html);
          });

          // Exchange GitHub code for token
          app.get("/api/auth/github/exchange", (req, res) => {
            const code = req.query.code;
            
            if (!code) {
              return res.status(400).json({ error: "Code parameter is required" });
            }
            
            console.log(`GitHub OAuth exchange request received with code: ${code}`);
            
            // Mock response
            const mockResponse = {
              access_token: "mock_access_token",
              token_type: "bearer",
              user: {
                username: "mock_user",
                email: "mock_user@example.com",
                full_name: "Mock User",
                avatar_url: "https://github.com/identicons/mock_user.png"
              }
            };
            
            res.json(mockResponse);
          });

          // Get user data
          app.get("/api/auth/me", (req, res) => {
            const authHeader = req.headers.authorization;
            
            if (!authHeader || !authHeader.startsWith("Bearer ")) {
              return res.status(401).json({ error: "Authorization header is required" });
            }
            
            const token = authHeader.split(" ")[1];
            
            console.log(`Auth/me request received with token: ${token}`);
            
            // Mock user data
            const mockUser = {
              username: "mock_user",
              email: "mock_user@example.com",
              full_name: "Mock User",
              avatar_url: "https://github.com/identicons/mock_user.png"
            };
            
            res.json(mockUser);
          });

          // Start the server
          app.listen(port, "0.0.0.0", () => {
            console.log(`Highest priority GitHub service running on port ${port}`);
          });
          EOF
          
          # Install dependencies
          npm install
          
          # Start the server
          node index.js
        ports:
        - containerPort: 3000
---
apiVersion: v1
kind: Service
metadata:
  name: highest-priority-github
  namespace: vibecode
spec:
  selector:
    app: highest-priority-github
  ports:
  - port: 80
    targetPort: 3000
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: highest-priority-github-ingress
  namespace: vibecode
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.tls.certresolver: letsencrypt
    traefik.ingress.kubernetes.io/router.priority: "9999999"
spec:
  ingressClassName: traefik
  rules:
  - host: vibecode.gigahard.ai
    http:
      paths:
      - path: /api/auth/github
        pathType: Exact
        backend:
          service:
            name: highest-priority-github
            port:
              number: 80
      - path: /github-callback
        pathType: Exact
        backend:
          service:
            name: highest-priority-github
            port:
              number: 80
      - path: /api/auth/github/exchange
        pathType: Exact
        backend:
          service:
            name: highest-priority-github
            port:
              number: 80
      - path: /api/auth/me
        pathType: Exact
        backend:
          service:
            name: highest-priority-github
            port:
              number: 80
  tls:
  - hosts:
    - vibecode.gigahard.ai
