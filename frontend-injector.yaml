apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-injector
  namespace: vibecode
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend-injector
  template:
    metadata:
      labels:
        app: frontend-injector
    spec:
      containers:
      - name: nginx
        image: nginx:alpine
        ports:
        - containerPort: 80
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: default.conf
      volumes:
      - name: nginx-config
        configMap:
          name: frontend-injector-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: frontend-injector-config
  namespace: vibecode
data:
  default.conf: |
    server {
        listen 80;
        
        # Enable CORS
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
        
        # Handle OPTIONS method for CORS preflight
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
        
        # Proxy requests to the frontend
        location / {
            proxy_pass http://frontend:80;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Inject the script into the HTML
            sub_filter '</head>' '<script src="/inject.js"></script></head>';
            sub_filter_once on;
        }
    }
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-injector
  namespace: vibecode
spec:
  selector:
    app: frontend-injector
  ports:
  - port: 80
    targetPort: 80
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: frontend-injector-ingress
  namespace: vibecode
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: web,websecure
    traefik.ingress.kubernetes.io/router.priority: "400"
spec:
  ingressClassName: traefik
  tls:
  - hosts:
    - vibecode.gigahard.ai
  rules:
  - host: vibecode.gigahard.ai
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: frontend-injector
            port:
              number: 80
