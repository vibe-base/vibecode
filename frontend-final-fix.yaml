apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-final-fix
  namespace: vibecode
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend-final-fix
  template:
    metadata:
      labels:
        app: frontend-final-fix
    spec:
      containers:
      - name: nginx
        image: nginx:alpine
        ports:
        - containerPort: 80
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: default.conf
      volumes:
      - name: nginx-config
        configMap:
          name: frontend-final-fix-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: frontend-final-fix-config
  namespace: vibecode
data:
  default.conf: |
    server {
        listen 80;
        
        location / {
            # Proxy requests to the frontend
            proxy_pass http://frontend:80;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Inject the script into the HTML
            sub_filter '</head>' '<script>
            (function() {
              console.log("Fetch override script loaded");
              
              // Save the original fetch function
              const originalFetch = window.fetch;
              
              // Override the fetch function
              window.fetch = function(url, options) {
                // Check if the URL is the hardcoded localhost URL
                if (typeof url === "string" && url.includes("localhost:8000/api/auth/github/exchange")) {
                  console.log("Intercepting fetch to localhost:8000");
                  
                  // Extract the code from the URL
                  const originalUrl = new URL(url);
                  const code = originalUrl.searchParams.get("code");
                  
                  // Create the new URL with the correct domain
                  const newUrl = "https://vibecode.gigahard.ai/api/auth/github/exchange?code=" + code;
                  console.log("Redirecting to: " + newUrl);
                  
                  // Call the original fetch with the new URL
                  return originalFetch(newUrl, options);
                }
                
                // For all other URLs, use the original fetch
                return originalFetch.apply(this, arguments);
              };
              
              console.log("Fetch override installed");
            })();
            </script></head>';
            sub_filter_once on;
        }
    }
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-final-fix
  namespace: vibecode
spec:
  selector:
    app: frontend-final-fix
  ports:
  - port: 80
    targetPort: 80
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: frontend-final-fix-ingress
  namespace: vibecode
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: web,websecure
    traefik.ingress.kubernetes.io/router.priority: "500"
spec:
  ingressClassName: traefik
  tls:
  - hosts:
    - vibecode.gigahard.ai
  rules:
  - host: vibecode.gigahard.ai
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: frontend-final-fix
            port:
              number: 80
