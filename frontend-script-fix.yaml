apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-script-fix
  namespace: vibecode
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend-script-fix
  template:
    metadata:
      labels:
        app: frontend-script-fix
    spec:
      containers:
      - name: node
        image: node:18-alpine
        command: ["/bin/sh", "-c"]
        args:
        - |
          # Create a directory for the script server
          mkdir -p /app
          cd /app
          
          # Create package.json
          echo '{
            "name": "frontend-script-fix",
            "version": "1.0.0",
            "description": "Script server for frontend",
            "main": "index.js",
            "dependencies": {
              "express": "^4.18.2",
              "cors": "^2.8.5"
            }
          }' > package.json
          
          # Create index.js
          echo 'const express = require("express");
          const cors = require("cors");
          const app = express();
          const port = process.env.PORT || 3000;

          // Enable CORS for all routes
          app.use(cors({
            origin: "*",
            methods: ["GET", "POST", "OPTIONS"],
            allowedHeaders: ["Content-Type", "Authorization", "Accept"],
            credentials: true
          }));

          console.log("Starting script server...");

          // Serve the script
          app.get("/fix.js", (req, res) => {
            console.log("Serving fix.js");
            
            const script = `
              // This script overrides the fetch function to intercept calls to localhost:8000
              (function() {
                console.log("Fetch override script loaded");
                
                // Save the original fetch function
                const originalFetch = window.fetch;
                
                // Override the fetch function
                window.fetch = function(url, options) {
                  // Check if the URL is the hardcoded localhost URL
                  if (typeof url === "string" && url.includes("localhost:8000/api/auth/github/exchange")) {
                    console.log("Intercepting fetch to localhost:8000");
                    
                    // Extract the code from the URL
                    const originalUrl = new URL(url);
                    const code = originalUrl.searchParams.get("code");
                    
                    // Create the new URL with the correct domain
                    const newUrl = "https://vibecode.gigahard.ai/api/auth/github/exchange?code=" + code;
                    console.log("Redirecting to: " + newUrl);
                    
                    // Call the original fetch with the new URL
                    return originalFetch(newUrl, options);
                  }
                  
                  // For all other URLs, use the original fetch
                  return originalFetch.apply(this, arguments);
                };
                
                console.log("Fetch override installed");
              })();
            `;
            
            res.setHeader("Content-Type", "application/javascript");
            res.send(script);
          });

          // Start the server
          app.listen(port, "0.0.0.0", () => {
            console.log(`Script server running on port ${port}`);
          });' > index.js
          
          # Install dependencies
          npm install
          
          # Start the script server
          node index.js
        ports:
        - containerPort: 3000
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-script-fix
  namespace: vibecode
spec:
  selector:
    app: frontend-script-fix
  ports:
  - port: 80
    targetPort: 3000
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: frontend-script-fix-ingress
  namespace: vibecode
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: web,websecure
    traefik.ingress.kubernetes.io/router.priority: "300"
spec:
  ingressClassName: traefik
  tls:
  - hosts:
    - vibecode.gigahard.ai
  rules:
  - host: vibecode.gigahard.ai
    http:
      paths:
      - path: /fix.js
        pathType: Exact
        backend:
          service:
            name: frontend-script-fix
            port:
              number: 80
